name: SSL Certificate Setup with Traefik

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "Domain name for SSL certificate"
        required: true
        type: string

jobs:
  traefik-setup:
    name: Setup Traefik with SSL
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Install and Configure Traefik
        run: |
          ssh ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} << 'EOF'
          # Create directories for Traefik
          sudo mkdir -p /etc/traefik
          sudo mkdir -p /etc/traefik/dynamic
          sudo mkdir -p /etc/traefik/acme

          # Create Traefik static configuration
          sudo tee /etc/traefik/traefik.yml << 'TRAEFIK'
          global:
            checkNewVersion: true
            sendAnonymousUsage: false

          api:
            dashboard: true
            debug: true

          entryPoints:
            web:
              address: ":80"
              http:
                redirections:
                  entryPoint:
                    to: websecure
                    scheme: https
                    permanent: true
            websecure:
              address: ":443"

          providers:
            docker:
              endpoint: "unix:///var/run/docker.sock"
              exposedByDefault: false
            file:
              directory: "/etc/traefik/dynamic"
              watch: true

          certificatesResolvers:
            letsencrypt:
              acme:
                email: "${{ secrets.SSL_EMAIL }}"
                storage: "/etc/traefik/acme/acme.json"
                httpChallenge:
                  entryPoint: web
          TRAEFIK

          # Create dynamic configuration for your Node.js app
          sudo tee /etc/traefik/dynamic/node-app.yml << 'DYNAMIC'
          http:
            routers:
              node-app:
                rule: "Host(`${{ github.event.inputs.domain }}`)"
                service: "node-app"
                entryPoints:
                  - "websecure"
                tls:
                  certResolver: "letsencrypt"

            services:
              node-app:
                loadBalancer:
                  servers:
                    - url: "http://localhost:3000"
          DYNAMIC

          # Create Traefik service file
          sudo tee /etc/systemd/system/traefik.service << 'SERVICE'
          [Unit]
          Description=Traefik
          Documentation=https://docs.traefik.io
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=simple
          User=root
          Group=root
          ExecStart=/usr/local/bin/traefik --configfile=/etc/traefik/traefik.yml
          Restart=on-failure
          RestartSec=2
          LimitNOFILE=1048576

          [Install]
          WantedBy=multi-user.target
          SERVICE

          # Download and install Traefik
          TRAEFIK_VERSION=$(curl -s https://api.github.com/repos/traefik/traefik/releases/latest | grep tag_name | cut -d '"' -f 4)
          sudo curl -L "https://github.com/traefik/traefik/releases/download/${TRAEFIK_VERSION}/traefik_${TRAEFIK_VERSION}_linux_amd64.tar.gz" -o traefik.tar.gz
          sudo tar -zxvf traefik.tar.gz traefik
          sudo mv traefik /usr/local/bin/
          sudo chmod +x /usr/local/bin/traefik

          # Create acme.json file
          sudo touch /etc/traefik/acme/acme.json
          sudo chmod 600 /etc/traefik/acme/acme.json

          # Stop Nginx if it's running
          if systemctl is-active --quiet nginx; then
            sudo systemctl stop nginx
            sudo systemctl disable nginx
          fi

          # Reload systemd and start Traefik
          sudo systemctl daemon-reload
          sudo systemctl enable traefik
          sudo systemctl start traefik

          # Wait for Traefik to start
          sleep 10

          # Check Traefik status
          sudo systemctl status traefik

          # Show logs
          sudo journalctl -u traefik -n 50 --no-pager
          EOF

      - name: Verify Setup
        run: |
          echo "Traefik setup completed for ${{ github.event.inputs.domain }}"
