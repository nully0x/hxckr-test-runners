name: SSL Certificate Setup

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "Domain name for SSL certificate"
        required: true
        type: string

jobs:
  ssl-setup:
    name: Setup SSL Certificate
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Install and Configure SSL
        run: |
          ssh ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} << 'EOF'
          # Install Certbot if not already installed
          if ! command -v certbot &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y certbot
          fi

          # Install and configure Nginx if not already installed
          if ! command -v nginx &> /dev/null; then
            sudo apt-get install -y nginx
          fi

          # Stop Nginx temporarily
          sudo systemctl stop nginx

          # Get SSL certificate
          sudo certbot certonly --standalone \
            --preferred-challenges http \
            --agree-tos \
            --non-interactive \
            --email ${{ secrets.SSL_EMAIL }} \
            -d ${{ github.event.inputs.domain }}

          # Create Nginx configuration
          sudo tee /etc/nginx/sites-available/${{ github.event.inputs.domain }} << 'CONF'
          server {
              listen 80;
              server_name ${{ github.event.inputs.domain }};
              return 301 https://$host$request_uri;
          }

          server {
              listen 443 ssl;
              server_name ${{ github.event.inputs.domain }};

              ssl_certificate /etc/letsencrypt/live/${{ github.event.inputs.domain }}/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/${{ github.event.inputs.domain }}/privkey.pem;

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }
          CONF

          # Enable the site
          sudo ln -sf /etc/nginx/sites-available/${{ github.event.inputs.domain }} /etc/nginx/sites-enabled/

          # Test Nginx configuration
          sudo nginx -t

          # Start Nginx
          sudo systemctl start nginx

          # Setup auto-renewal
          sudo certbot renew --dry-run
          EOF

      - name: Verify Setup
        run: |
          echo "SSL certificate setup completed for ${{ github.event.inputs.domain }}"
